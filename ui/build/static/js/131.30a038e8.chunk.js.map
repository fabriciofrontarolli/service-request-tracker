{"version":3,"file":"static/js/131.30a038e8.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/shared-components/ColorPicker/index.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/HeaderNav.js","components/layout-components/NavSearch/index.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","layouts/AppLayout.js","utils/index.js","views/app-views/dashboards/dados.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection, style } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={\r\n\t\t\t\t`${getFlexResponsive()}\r\n\t\t\t\t${className}\r\n\t\t\t\t${flexDirection?('flex-' + flexDirection): ''}\r\n\t\t\t\t${alignItems?('align-items-' + alignItems):''}\r\n\t\t\t\t${justifyContent?('justify-content-' + justifyContent):''}`\r\n\t\t\t\t}\r\n\t\t\tstyle={style || {}}\r\n\t\t\t>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst translate = t(id, fallback)\r\n\r\n\treturn <>{translate}</>\r\n}\r\n\r\nexport default IntlMessage;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { \r\n  DashboardOutlined,\r\n  ToolOutlined,\r\n  LaptopOutlined,\r\n  UserOutlined,\r\n  UserAddOutlined,\r\n  FileAddOutlined,\r\n  FileSearchOutlined,\r\n  UserSwitchOutlined,\r\n  UsergroupAddOutlined,\r\n  ShopOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport { PERFIL_ADMINISTRADOR, PERFIL_CLIENTE, PERFIL_TECNICO } from 'views/app-views/dashboards/dados';\r\n\r\n\r\nconst navOperacional = [{\r\n  key: 'operacional',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.operacional',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id, PERFIL_CLIENTE.id],\r\n  submenu: [\r\n    {\r\n      key: 'ordens-de-servico',\r\n      path: `${APP_PREFIX_PATH}/dashboards/ordens-de-servico`,\r\n      title: 'sidenav.operacional.ordensDeServico',\r\n      icon: FileSearchOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id, PERFIL_CLIENTE.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'abrir-chamado',\r\n      path: `${APP_PREFIX_PATH}/dashboards/abrir-chamado`,\r\n      title: 'sidenav.operacional.abrirChamado',\r\n      icon: FileAddOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id, PERFIL_CLIENTE.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'dashboards-customers',\r\n      path: `${APP_PREFIX_PATH}/dashboards/clientes`,\r\n      title: 'sidenav.operacional.clientes',\r\n      icon: UserOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'dashboards-customer',\r\n      path: `${APP_PREFIX_PATH}/dashboards/novo-cliente`,\r\n      title: 'sidenav.operacional.novoCliente',\r\n      icon: UserAddOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst navQuadros = [{\r\n  key: 'quadros',\r\n  path: `${APP_PREFIX_PATH}/quadros`,\r\n  title: 'sidenav.quadros',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id],\r\n  submenu: [\r\n    {\r\n      key: 'laboratorio',\r\n      path: `${APP_PREFIX_PATH}/quadros/laboratorio`,\r\n      title: 'sidenav.quadros.laboratorio',\r\n      icon: LaptopOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'campo',\r\n      path: `${APP_PREFIX_PATH}/quadros/campo`,\r\n      title: 'sidenav.quadros.campo',\r\n      icon: ToolOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id],\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst navAdministrativo = [{\r\n  key: 'administrativo',\r\n  path: `${APP_PREFIX_PATH}/usuarios`,\r\n  title: 'sidenav.administrativo',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  profiles: [PERFIL_ADMINISTRADOR.id],\r\n  submenu: [\r\n    {\r\n      key: 'usuarios',\r\n      path: `${APP_PREFIX_PATH}/administrativo/usuarios`,\r\n      title: 'sidenav.administrativo.usuarios.listagem',\r\n      icon: UserSwitchOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'novo-usuario',\r\n      path: `${APP_PREFIX_PATH}/administrativo/novo-usuario`,\r\n      title: 'sidenav.administrativo.usuarios.novo',\r\n      icon: UsergroupAddOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'fornecedores',\r\n      path: `${APP_PREFIX_PATH}/administrativo/fornecedores`,\r\n      title: 'sidenav.administrativo.fornecedores.listagem',\r\n      icon: ShopOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'novo-fornecedor',\r\n      path: `${APP_PREFIX_PATH}/administrativo/novo-fornecedor`,\r\n      title: 'sidenav.administrativo.fornecedores.novo',\r\n      icon: ShopOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...navOperacional,\r\n  ...navQuadros,\r\n  ...navAdministrativo,\r\n]\r\n\r\nexport default navigationConfig;\r\n","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport { AUTH_USER } from 'constants/AuthConstant';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n\tisLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n\tlet keyList = [];\r\n\tlet keyString = \"\";\r\n\tif (key) {\r\n\t\tconst arr = key.split(\"-\");\r\n\t\tfor (let index = 0; index < arr.length; index++) {\r\n\t\t\tconst elm = arr[index];\r\n\t\t\tindex === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n\t\t\tkeyList.push(keyString);\r\n\t\t}\r\n\t}\r\n\treturn keyList;\r\n};\r\n\r\nconst MenuItem = ({title, icon, path}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tdispatch(onMobileNavToggle(false))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{icon && <Icon type={icon} style={{ fontSize: '40px', color: 'red' }} /> }\r\n\t\t\t<span>{setLocale(title)}</span>\r\n\t\t\t{path && <Link onClick={closeMobileNav} to={path} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst getSideNavMenuItem = (navItem, perfil) => navItem.map(nav => {\r\n\tconst isAllowed = nav.profiles.find(p => p.toLowerCase() === perfil);\r\n\tif (!isAllowed) {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : {path: nav.path, icon: nav.icon})} />,\r\n\t\t...(nav.isGroupTitle ? {type: 'group'} : {}),\r\n\t\t...(nav.submenu.length > 0 ? {children: getSideNavMenuItem(nav.submenu, perfil)} : {})\r\n\t}\r\n})\r\n\r\nconst getTopNavMenuItem = (navItem, perfil) => navItem.map(nav => {\r\n\tconst isAllowed = nav.profiles.find(p => p.toLowerCase() === perfil);\r\n\tif (!isAllowed) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : {path: nav.path})} />,\r\n\t\t...(nav.submenu.length > 0 ? {children: getTopNavMenuItem(nav.submenu, perfil)} : {})\r\n\t}\r\n})\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { routeInfo, hideGroupTitle } = props;\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\r\n\tconst getLoggedInUser = () => {\r\n\t\tconst loggedInUserRaw = localStorage.getItem(AUTH_USER) || null;\r\n\t\tconst loggedInUser = JSON.parse(loggedInUserRaw);\r\n\t\treturn loggedInUser;\r\n\t}\r\n\r\n\tconst loggedInUser = getLoggedInUser();\r\n\tconst userProfile = loggedInUser ? loggedInUser.perfil : '';\r\n\r\n\tconst menuItems = useMemo(() => getSideNavMenuItem(navigationConfig, userProfile), []);\r\n\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tmode=\"inline\"\r\n\t\t\ttheme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n\t\t\tstyle={{ height: \"100%\", borderRight: 0, fontSize: '16px' }}\r\n\t\t\tdefaultSelectedKeys={[routeInfo?.key]}\r\n\t\t\tdefaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n\t\t\tclassName={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst TopNavContent = () => {\r\n\tconst topNavColor = useSelector(state => state.theme.topNavColor);\r\n\r\n\tconst getLoggedInUser = () => {\r\n\t\tconst loggedInUserRaw = localStorage.getItem(AUTH_USER) || null;\r\n\t\tconst loggedInUser = JSON.parse(loggedInUserRaw);\r\n\t\treturn loggedInUser;\r\n\t}\r\n\r\n\tconst loggedInUser = getLoggedInUser();\r\n\tconst userProfile = loggedInUser ? loggedInUser.perfil : '';\r\n\r\n\tconst menuItems = useMemo(() => getTopNavMenuItem(navigationConfig, userProfile), []);\r\n\r\n\treturn (\r\n\t\t<Menu \r\n\t\t\tmode=\"horizontal\" \r\n\t\t\tstyle={{ backgroundColor: topNavColor }}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n\treturn props.type === NAV_TYPE_SIDE ? (\r\n\t\t<SideNavContent {...props} />\r\n\t) : (\r\n\t\t<TopNavContent {...props} />\r\n\t);\r\n};\r\n\r\nexport default MenuContent;\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor,}) => {\r\n\tconst props = { topNavColor }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { useSelector } from 'react-redux';\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n\tconst navType = useSelector(state => state.theme.navType);\r\n\r\n\tconst getLogoWidthGutter = () => {\r\n\t\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tif(isNavTop) {\r\n\t\t\treturn 'auto'\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst getLogo = () => {\r\n\t\tif(logoType === 'light') {\r\n\t\t\tif(navCollapsed) {\r\n\t\t\treturn '/img/sathi-logo.png'\r\n\t\t\t}\r\n\t\t\treturn '/img/sathi-logo.png'\r\n\t\t}\r\n\t\r\n\t\tif (navCollapsed) {\r\n\t\t\treturn '/img/sathi-logo.png'\r\n\t\t}\r\n\t\treturn '/img/sathi-logo.png'\r\n\t}\r\n\t\r\n\tconst getLogoDisplay = () => {\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 'd-none'\r\n\t\t} else {\r\n\t\t\treturn 'logo'\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={getLogoDisplay()} \r\n\t\t\tstyle={{width: `${getLogoWidthGutter()}`}}>\r\n\t\t\t<img src={getLogo()} alt={`${APP_NAME} logo`} style={{ width: 'inherit' }} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n\trouteInfo,\r\n\thideGroupTitle\r\n}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n\tconst menuContentprops = { sideNavTheme, routeInfo, hideGroupTitle };\r\n\r\n\tconst onClose = () => {\r\n\t\tdispatch(onMobileNavToggle(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onClose}\r\n\t\t\topen={mobileNav}\r\n\t\t\tbodyStyle={{ padding: 5 }}\r\n\t\t>\r\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\r\n\t\t\t\t<Flex justifyContent=\"between\" alignItems=\"center\">\r\n\t\t\t\t\t<Logo mobileLogo={true} />\r\n\t\t\t\t\t<div className=\"nav-close\" onClick={() => onClose()}>\r\n\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"mobile-nav-menu\">\r\n\t\t\t\t\t<Scrollbars autoHide>\r\n\t\t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default MobileNav;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Menu, Dropdown, Avatar, Divider } from 'antd';\r\nimport { useDispatch } from 'react-redux'\r\nimport { \r\n\tEditOutlined,\r\n\tLogoutOutlined ,\r\n\tUserOutlined\r\n} from '@ant-design/icons';\r\nimport Icon from 'components/util-components/Icon';\r\nimport { signOut } from 'store/slices/authSlice';\r\nimport { AUTH_USER } from 'constants/AuthConstant';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nconst MenuItem = (props) => (\r\n\t<a className=\"d-flex align-items-center\" href={props.path}>\r\n\t\t<Icon className=\"font-size-md\" type={props.icon} />\r\n\t\t<span className=\"font-weight-normal mx-2\">{props.label}</span>\r\n\t</a>\r\n)\r\n\r\nconst MenuItemSignOut = (props) => (\r\n\t<span className=\"d-flex align-items-center\">\r\n\t\t<LogoutOutlined className=\"font-size-md\" />\r\n\t\t<span className=\"font-weight-normal mx-2\">{props.label}</span>\r\n\t</span>\r\n)\r\n\r\nexport const NavProfile = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [userName, setUserName] = useState();\r\n\r\n\tconst handleClick = ({ key }) => {\r\n\t\tif (key === 'Sign Out') {\r\n\t\t\thandleSignOut()\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSignOut = () => {\r\n\t\tdispatch(signOut())\r\n\t}\r\n\r\n\tconst menu = (\r\n\t\t<Menu\r\n\t\t\tonClick={handleClick}\r\n\t\t\titems={\r\n\t\t\t\t[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Edit Profile',\r\n\t\t\t\t\t\tlabel: <MenuItem path={`${APP_PREFIX_PATH}/perfil`} label=\"Meu Perfil\" icon={EditOutlined} />,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Sign Out',\r\n\t\t\t\t\t\tlabel: <MenuItemSignOut label=\"Sair\" />,\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t/>\r\n\t)\r\n\r\n\tconst getLoggedInUser = () => {\r\n\t\tconst loggedInUserRaw = localStorage.getItem(AUTH_USER) || null;\r\n\t\tif (!!loggedInUserRaw) {\r\n\t\t\tconst loggedInUser = JSON.parse(loggedInUserRaw);\r\n\t\t\tsetUserName(loggedInUser && loggedInUser.nome);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetLoggedInUser();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={menu} trigger={[\"click\"]}>\r\n\t\t\t<div className=\"nav-item\">\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<div className=\"pl-2 d-none d-sm-block profile-text\">\r\n\t\t\t\t\t\t<div className=\"font-size-base font-weight-bold\">\r\n\t\t\t\t\t\t\t{ userName }\r\n\t\t\t\t\t\t\t<UserOutlined className=\"nav-icon ml-2 mr-2\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t);\r\n}\r\n\r\nexport default NavProfile\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from 'assets/data/language.data.json';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { onLocaleChange } from 'store/slices/themeSlice';\r\nimport i18n from 'i18next'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = () => {\r\n\r\n\tconst locale = useSelector(state => state.theme.locale)\r\n\r\n\tconst language = getLanguageDetail(locale);\r\n\tconst {langName, icon} = language;\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nconst MenuItem = (props) => {\r\n\tconst locale = useSelector(state => state.theme.locale);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleLocaleChange = (langId) => {\r\n\t\tdispatch(onLocaleChange(langId))\r\n\t\ti18n.changeLanguage(langId)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<span className=\"d-flex justify-content-between align-items-center\" onClick={() => handleLocaleChange(props.langId)}>\r\n\t\t\t<div>\r\n\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${props.icon}.png`} alt={props.langName}/>\r\n\t\t\t\t<span className=\"font-weight-normal ml-2\">{props.langName}</span>\r\n\t\t\t</div>\r\n\t\t\t{locale === props.langId ? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t</span>\r\n\t)\r\n}\r\n\r\nconst menu = (\r\n\t<Menu \r\n\t\titems={\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'En',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"us\" langName=\"English\" langId=\"en\" />\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Ch',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"cn\" langName=\"Chinese\" langId=\"zh\" />\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Fr',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"fr\" langName=\"French\" langId=\"fr\" />\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Jp',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"jp\" langName=\"Janpanese\" langId=\"ja\" />\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t/>\r\n)\r\n\r\nexport const NavLanguage = ({ configDisplay }) => {\r\n\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={menu} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"nav-item\">\r\n\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nexport default NavLanguage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'store/slices/themeSlice';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = () => {\r\n\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { \r\n\t\tnavType, \r\n\t\tsideNavTheme, \r\n\t\tnavCollapsed, \r\n\t\ttopNavColor, \r\n\t\theaderNavColor, \r\n\t\tlocale, \r\n\t\tcurrentTheme, \r\n\t\tdirection \r\n\t} = useSelector(state => state.theme)\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP\r\n\tconst isCollapse = navCollapsed \r\n\r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tdispatch(onSwitchTheme(changedTheme))\r\n\t\tswitcher({ theme: themes[changedTheme] });\r\n\t};\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tdispatch(onHeaderNavColorChange(''))\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tdispatch(onTopNavColorChange(hex))\r\n\t}\r\n\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tdispatch(onHeaderNavColorChange(hex))\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tdispatch(onHeaderNavColorChange(''))\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tdispatch(onNavTypeChange(value))\r\n\t}\r\n\r\n\tconst haddleNavStyleChange = (style) => {\r\n\t\tdispatch(onNavStyleChange(style))\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\tconst handleToggleCollapseNav = () => {\r\n\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t}\r\n\r\n\tconst handleDirectionChange = (dir) => {\r\n\t\tdispatch(onDirectionChange(dir))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navegação</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Cor Barra de Navegação:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Tipo de Navegação:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Lateral</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Topo</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Cor Navegação Lateral:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => haddleNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Colapsar Navegação Lateral:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={handleToggleCollapseNav} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Tema Escuro:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Direção:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => handleDirectionChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={direction}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_LTR}>Esquerda</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_RTL}>Direita</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ThemeConfigurator\r\n","import React, { useState } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport const NavPanel = ({ direction }) => {\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n  \tconst showDrawer = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n  \tconst onClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"nav-item\" onClick={showDrawer}>\r\n\t\t\t\t<SettingOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t</div>\r\n\t\t\t<Drawer\r\n\t\t\t\ttitle=\"Configuração de Tema\"\r\n\t\t\t\tplacement={direction === DIR_RTL ? 'left' : 'right'} \r\n\t\t\t\twidth={350}\r\n\t\t\t\tonClose={onClose}\r\n\t\t\t\topen={open}\r\n\t\t\t>\r\n\t\t\t\t<ThemeConfigurator/>\r\n\t\t\t</Drawer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NavPanel;","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tpopupClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\nimport NavLanguage from './NavLanguage';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport SearchInput from './NavSearch/SearchInput.js'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n\r\n\tconst { isMobile } = props;\r\n\r\n\tconst [searchActive, setSearchActive] = useState(false);\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed)\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav)\r\n\tconst navType = useSelector(state => state.theme.navType)\r\n\tconst headerNavColor = useSelector(state => state.theme.headerNavColor)\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\tconst direction = useSelector(state => state.theme.direction)\r\n\r\n\tconst onSearchActive = () => {\r\n\t\tsetSearchActive(true)\r\n\t}\r\n\r\n\tconst onSearchClose = () => {\r\n\t\tsetSearchActive(false)\r\n\t}\r\n\r\n\tconst onToggle = () => {\r\n\t\tif(!isMobile) {\r\n\t\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t\t} else {\r\n\t\t\tdispatch(onMobileNavToggle(!mobileNav))\r\n\t\t}\r\n\t}\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\r\n\tconst mode = ()=> {\r\n\t\tif(!headerNavColor) {\r\n\t\t\treturn utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n\t\t}\r\n\t\treturn utils.getColorContrast(headerNavColor);\r\n\t}\r\n\r\n\tconst navMode = mode();\r\n\r\n\tconst getNavWidth = () => {\r\n\t\tif(isNavTop || isMobile) {\r\n\t\t\treturn '0px';\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`;\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!isMobile) {\r\n\t\t\tonSearchClose();\r\n\t\t}\r\n\t})\r\n\t\r\n\treturn (\r\n\t\t<Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n\t\t\t\t<Logo logoType={navMode} />\r\n\t\t\t\t<div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n\t\t\t\t\t<div className=\"nav-left\">\r\n\t\t\t\t\t\t<div className=\"nav-item\" onClick={onToggle}>\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t{navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"nav-right\">\r\n\t\t\t\t\t\t<NavProfile />\r\n\t\t\t\t\t\t<NavPanel direction={direction} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Header>\r\n\t)\r\n}\r\n\r\nexport default HeaderNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = props => {\r\n\tconst location = useLocation();\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn (\r\n\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t<Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t</Breadcrumb.Item>\r\n\t\t);\r\n\t});\r\n  \r\n\treturn (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n\t);\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport { Layout, Grid,} from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { \r\n    SIDE_NAV_WIDTH, \r\n    SIDE_NAV_COLLAPSED_WIDTH,\r\n    NAV_TYPE_SIDE,\r\n    NAV_TYPE_TOP,\r\n    DIR_RTL,\r\n    DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\n\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n    const screens = utils.getBreakPoint(useBreakpoint());\r\n    const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n    const isNavSide = navType === NAV_TYPE_SIDE\r\n    const isNavTop = navType === NAV_TYPE_TOP\r\n    const getLayoutGutter = () => {\r\n        if(isNavTop || isMobile) {\r\n            return 0\r\n        }\r\n        return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n    }\r\n\r\n    const { status } = useThemeSwitcher();\r\n\r\n    if (status === 'loading') {\r\n        return <Loading cover=\"page\" />;\r\n    }\r\n\r\n    const getLayoutDirectionGutter = () => {\r\n        if(direction === DIR_LTR) {\r\n            return {paddingLeft: getLayoutGutter()}\r\n        }  \r\n        if(direction === DIR_RTL) {\r\n            return {paddingRight: getLayoutGutter()}\r\n        }\r\n        return {paddingLeft: getLayoutGutter()}\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <HeaderNav isMobile={isMobile}/>\r\n            {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n            <Layout className=\"app-container\">\r\n                {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n                <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n                    <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n                        <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n                        <Content>\r\n                            <Suspense fallback={<Loading cover=\"content\"/>}>\r\n                                {children}\r\n                            </Suspense>\r\n                        </Content>\r\n                    </div>\r\n                </Layout>\r\n            </Layout>\r\n            {isMobile && <MobileNav />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { navCollapsed, navType, locale } =  theme;\r\n    return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","\nexport const TRIAGEM = {\n\t\"id\": \"deddf150-e3a0-4a09-8b54-671df2ba6824\",\n\t\"description\": \"Triagem\"\n};\n\nexport const ABERTO = {\n\t\"id\": \"cbe8b932-90ca-4a5b-84e4-3aa91571a0cb\",\n\t\"description\": \"Aberto\"\n};\n\nexport const EM_ANDAMENTO = {\n\t\"id\": \"5c1795fd-8856-4c44-85fd-f1488cb5489b\",\n\t\"description\": \"Em Atendimento\"\n};\n\nexport const FECHADO = {\n\t\"id\": \"1cdf403c-9da1-4a8e-b2fc-3e356d9815ff\",\n\t\"description\": \"Fechado\"\n};\n\nexport const COBRANCA = {\n\t\"id\": \"4a48df79-a466-4bd0-83b9-3c94b2b76d7f\",\n\t\"description\": \"Cobrança\"\n};\n\nexport const ARQUIVADO = {\n\t\"id\": \"1050ced4-0599-456d-a614-932ab25aed99\",\n\t\"description\": \"Arquivado\"\n};\n\nexport const PERFIL_ADMINISTRADOR = {\n\t\"id\": \"administrador\",\n\t\"description\": \"Administrador\"\n};\nexport const PERFIL_TECNICO = {\n\t\"id\": \"tecnico\",\n\t\"description\": \"Tecnico\"\n};\nexport const PERFIL_CLIENTE = {\n\t\"id\": \"cliente\",\n\t\"description\": \"Cliente\"\n};\n\nexport const listaPerfil = [\n\tPERFIL_ADMINISTRADOR,\n\tPERFIL_TECNICO,\n\tPERFIL_CLIENTE\n];\n\nexport const listaStatusOrdemServico = [\n\tTRIAGEM,\n\tABERTO,\n\tEM_ANDAMENTO,\n\tFECHADO,\n\tCOBRANCA,\n\tARQUIVADO\t\n];\n\nexport const listaTipoOrdemServico = [\n\t{\n\t\t\"id\": \"f6d1944a-7569-4668-bae6-c6fe4f36eb29\",\n\t\t\"description\": \"Laboratório\"\n\t},\n\t{\n\t\t\"id\": \"9957342c-815e-47b4-8d16-62fe4432ee59\",\n\t\t\"description\": \"Campo\"\n\t}\n];\n"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","style","defaultProps","id","fallback","translate","t","useTranslation","Icon","this","type","React","Component","navOperacional","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","isGroupTitle","profiles","PERFIL_ADMINISTRADOR","PERFIL_TECNICO","PERFIL_CLIENTE","submenu","FileSearchOutlined","FileAddOutlined","UserOutlined","UserAddOutlined","navQuadros","LaptopOutlined","ToolOutlined","navAdministrativo","UserSwitchOutlined","UsergroupAddOutlined","ShopOutlined","useBreakpoint","Grid","setLocale","localeKey","isLocaleOn","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","MenuItem","dispatch","useDispatch","isMobile","utils","includes","fontSize","color","onClick","onMobileNavToggle","to","getSideNavMenuItem","navItem","perfil","map","nav","find","p","toLowerCase","label","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","useSelector","state","theme","loggedInUser","loggedInUserRaw","localStorage","getItem","AUTH_USER","JSON","parse","getLoggedInUser","userProfile","menuItems","useMemo","navigationConfig","mode","SIDE_NAV_LIGHT","height","borderRight","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","SIDE_NAV_DARK","width","SIDE_NAV_WIDTH","collapsed","autoHide","NAV_TYPE_TOP","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","src","alt","APP_NAME","mobileNav","menuContentprops","onClose","placement","closable","open","bodyStyle","padding","ArrowLeftOutlined","href","MenuItemSignOut","LogoutOutlined","useState","userName","setUserName","handleSignOut","signOut","menu","EditOutlined","useEffect","nome","overlay","trigger","locale","langId","onLocaleChange","i18n","maxWidth","langName","CheckOutlined","colorChange","visible","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","onPickerDropdown","onChange","value","rgb","rgba","r","g","b","a","colorOptions","ListOption","name","selector","disabled","vertical","headerNavColor","currentTheme","direction","isCollapse","useThemeSwitcher","switcher","themes","onHeaderNavColorChange","hex","onTopNavColorChange","size","e","target","toggleCollapsedNav","onNavTypeChange","onNavStyleChange","checked","isChecked","changedTheme","onSwitchTheme","dir","onDirectionChange","DIR_LTR","DIR_RTL","setOpen","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","popupClassName","onSelect","onSearch","searchText","item","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","Header","CloseOutlined","setSearchActive","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","i","assignBreadcrumb","obj","forEach","BreadcrumbRoute","pathSnippets","useLocation","pathname","filter","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","display","Content","AppLayout","location","currentRouteInfo","screens","isNavSide","getLayoutGutter","status","Loading","cover","paddingLeft","paddingRight","Suspense","Utils","initials","match","shift","pop","navTree","route","hasOwnProperty","getRouteInfo","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","list","data","input","breakpoints","TRIAGEM","ABERTO","EM_ANDAMENTO","FECHADO","listaPerfil","listaStatusOrdemServico","listaTipoOrdemServico"],"sourceRoot":""}