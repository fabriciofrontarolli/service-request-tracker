{"version":3,"file":"static/js/760.4d22a7ab.chunk.js","mappings":"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","sources":["services/FornecedorService.js","services/utils.js","views/app-views/dashboards/novo-fornecedor/index.js"],"sourcesContent":["import fetch from 'auth/FetchInterceptor'\nimport { normalizePayload } from './utils';\n\nconst FornecedorService = {}\n\nFornecedorService.fetch = function (page, limit, filtro) {\n\tlet apiQuery = `?page=${page}&limit=${limit}`;\n\n\tif (filtro) {\n\t\tconst updatedApiQuery = Object.entries(filtro)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.reduce((query, [key,value]) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst normalizedValue = encodeURIComponent(value.replace(/ /g, \"%20\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn `${query}&${key}=${normalizedValue}`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, apiQuery);\n\t\tapiQuery = updatedApiQuery;\n\t}\n\n\treturn fetch.get(`/fornecedores${apiQuery}`);\n}\n\nFornecedorService.get = function (id) {\n\tif (!id) { return undefined; }\n\treturn fetch.get(`/fornecedores/${id}`);\n}\n\nFornecedorService.criar = function (data) {\n\tnormalizePayload(data);\n\treturn fetch({\n\t\turl: '/fornecedores',\n\t\tmethod: 'post',\n\t\tdata: data\n\t});\n}\n\nFornecedorService.salvar = function (id, data) {\n\tnormalizePayload(data);\n\treturn fetch({\n\t\turl: `/fornecedores/${id}`,\n\t\tmethod: 'put',\n\t\tdata: data\n\t})\n}\n\nexport default FornecedorService;\n","export const normalizePayload = (formData) => {\n  // remove null values from payload\n  Object.keys(formData).forEach(function(key) {\n    if (formData[key] === null || formData[key] === undefined || formData[key] === '') {\n        delete formData[key];\n    }\n  });\n};\n","import React, { Component, useEffect, useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Card,\r\n  notification,\r\n} from 'antd';\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\nimport FornecedorService from 'services/FornecedorService';\r\nconst { TextArea } = Input;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 4,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst NovoFornecedor = () => {\r\n  const [fornecedorToUpdate, setFornecedorToUpdate] = useState(undefined);\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const getFornecedorToUpdate = async () => {\r\n      const fornecedorId = params && params.id;\r\n\r\n      try {\r\n        if (!!fornecedorId) {\r\n          const response = await FornecedorService.get(fornecedorId);\r\n          const fornecedor = response.data;\r\n          if (!!fornecedor) {\r\n            const allFields = Object.keys(fornecedor).map((field) => ({\r\n              name: field,\r\n              value: fornecedor[field]\r\n            }));\r\n            // remove id, created_at\r\n            const formFields = allFields.filter(field => (\r\n              field.name.toLowerCase() !== 'id' &&\r\n              field.name.toLowerCase() !== 'created_at'\r\n            ))\r\n\r\n            form.setFields(formFields);\r\n            setFornecedorToUpdate(fornecedor);\r\n          }\r\n        }\r\n      }\r\n      catch(err) {\r\n        navigate('/app/administrativo/fornecedores');\r\n        notification.error(`Erro ao buscar o fornecedor! ${err}`);\r\n      }\r\n    }\r\n\r\n    getFornecedorToUpdate();\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      if (fornecedorToUpdate) {\r\n        await FornecedorService.salvar(fornecedorToUpdate.id, values);\r\n      } else {\r\n        await FornecedorService.criar(values);\r\n      }\r\n\r\n      const successMessage = `Fornecedor ${fornecedorToUpdate ? 'atualizado' : 'criado'}`;\r\n      notification.success({ message: successMessage });\r\n\r\n      navigate('/app/administrativo/fornecedores');\r\n    }\r\n    catch (err) {\r\n      notification.error({\r\n        message: err\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n        prefix: '86',\r\n      }}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"codigo\"\r\n        label=\"Codigo\"\r\n        rules={[\r\n          {\r\n            max: 5,\r\n            message: 'Codigo deve conter no maximo 5 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"cpf_cnpj\"\r\n        label=\"CPF/CNPJ\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Insira o CNPJ/CPF',\r\n          },\r\n          {\r\n            min: 11,\r\n            message: 'CPF/CNPJ deve conter no minimo 11 caracteres',\r\n          },\r\n          {\r\n            max: 18,\r\n            message: 'CPF/CNPJ deve conter no maximo 14 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"inscricao_estadual\"\r\n        label=\"Inscricao Estadual\"\r\n        rules={[\r\n          {\r\n            min: 9,\r\n            message: 'Inscricao Estadual deve conter no minimo 9 caracteres',\r\n          },\r\n          {\r\n            max: 18,\r\n            message: 'Inscricao Estadual deve conter no maximo 18 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"razao_social\"\r\n        label=\"Razao Social\"\r\n        rules={[\r\n          {\r\n            max: 120,\r\n            message: 'Razao Social deve conter no minimo 120 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"nome_fantasia\"\r\n        label=\"Nome Fantasia\"\r\n        rules={[\r\n          {\r\n            max: 120,\r\n            message: 'Nome Fantasia deve conter no minimo 120 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"cep\"\r\n        label=\"CEP\"\r\n        rules={[\r\n          {\r\n            pattern: '[0-9]{5}-[0-9]{3}',\r\n            message: 'CEP deve conter o format 99999-999'\r\n          },\r\n          {\r\n            max: 9,\r\n            message: 'CEP deve conter no minimo 9 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"endereco\"\r\n        label=\"Endereco\"\r\n        rules={[\r\n          {\r\n            max: 150,\r\n            message: 'Endereco deve conter no maximo 150 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"numero\"\r\n        label=\"Numero\"\r\n        rules={[\r\n          {\r\n            max: 10,\r\n            message: 'Numero deve conter no maximo 10 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"complemento\"\r\n        label=\"Complemento\"\r\n        rules={[\r\n          {\r\n            max: 50,\r\n            message: 'Complemento deve conter no maximo 50 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"bairro\"\r\n        label=\"Bairro\"\r\n        rules={[\r\n          {\r\n            max: 60,\r\n            message: 'Complemento deve conter no minimo 60 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"cidade_estado\"\r\n        label=\"Cidade/Estado\"\r\n        rules={[\r\n          {\r\n            max: 70,\r\n            message: 'Cidade/Estado deve conter no maximo 70 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"telefone\"\r\n        label=\"Telefone\"\r\n        rules={[\r\n          {\r\n            max: 60,\r\n            message: 'Telefone deve conter no maximo 60 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"contato\"\r\n        label=\"Contato\"\r\n        rules={[\r\n          {\r\n            max: 50,\r\n            message: 'Contato deve conter no maximo 50 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        rules={[\r\n          {\r\n            max: 200,\r\n            message: 'Email deve conter no maximo 200 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <Input autoComplete=\"off\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"observacao\"\r\n        label=\"Observacao\"\r\n        rules={[\r\n          {\r\n            max: 100,\r\n            message: 'Observacao deve conter no maximo 100 caracteres',\r\n          }\r\n        ]}\r\n      >\r\n        <TextArea rows={4} value={\"\"} />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Salvar\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class Register extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Link to={`/app/administrativo/fornecedores`} style={{ cursor: 'pointer' }}>\r\n          <LeftOutlined /> Retornar\r\n        </Link>\r\n        <Card title=\"Novo Fornecedor\">\r\n          <NovoFornecedor />\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register\r\n"],"names":["FornecedorService","page","limit","filtro","apiQuery","Object","entries","reduce","query","key","value","normalizedValue","encodeURIComponent","replace","fetch","id","data","normalizePayload","url","method","formData","keys","forEach","undefined","TextArea","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","NovoFornecedor","useState","fornecedorToUpdate","setFornecedorToUpdate","Form","form","navigate","useNavigate","params","useParams","useEffect","getFornecedorToUpdate","fornecedorId","response","fornecedor","allFields","map","field","name","formFields","filter","toLowerCase","setFields","notification","onFinish","values","successMessage","message","initialValues","residence","prefix","scrollToFirstError","label","rules","max","autoComplete","required","min","pattern","rows","type","htmlType","Register","to","style","cursor","title","Component"],"sourceRoot":""}