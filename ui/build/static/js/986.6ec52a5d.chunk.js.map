{"version":3,"file":"static/js/986.6ec52a5d.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","services/OrdensDeServiceService.js","services/utils.js","utils/index.js","views/app-views/dashboards/dados.js","views/app-views/dashboards/ordens-de-servico/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection, style } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={\r\n\t\t\t\t`${getFlexResponsive()}\r\n\t\t\t\t${className}\r\n\t\t\t\t${flexDirection?('flex-' + flexDirection): ''}\r\n\t\t\t\t${alignItems?('align-items-' + alignItems):''}\r\n\t\t\t\t${justifyContent?('justify-content-' + justifyContent):''}`\r\n\t\t\t\t}\r\n\t\t\tstyle={style || {}}\r\n\t\t\t>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import fetch from 'auth/FetchInterceptor'\nimport { normalizePayload } from './utils';\n\nconst OrdensDeServicoService = {}\n\nOrdensDeServicoService.fetch = function (page, limit, filtro) {\n\tlet apiQuery = `?page=${page}&limit=${limit}`;\n\n\tif (filtro) {\n\t\tconst updatedApiQuery = Object.entries(filtro)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.reduce((query, [key,value]) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst normalizedValue = encodeURIComponent(value.replace(/ /g, \"%20\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn `${query}&${key}=${normalizedValue}`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, apiQuery);\n\t\tapiQuery = updatedApiQuery;\n\t}\n\n\treturn fetch.get(`/ordens-de-servico${apiQuery}`);\n}\n\nOrdensDeServicoService.get = function (id) {\n\tif (!id) { return undefined; }\n\treturn fetch.get(`/ordens-de-servico/${id}`);\n}\n\nOrdensDeServicoService.quadroLaboratorio = function () {\n\treturn fetch.get(`/ordens-de-servico/quadro-laboratorio`);\n}\n\nOrdensDeServicoService.quadroCampo = function () {\n\treturn fetch.get(`/ordens-de-servico/quadro-campo`);\n}\n\nOrdensDeServicoService.criar = function (data) {\n\tnormalizePayload(data);\n\treturn fetch({\n\t\turl: '/ordens-de-servico',\n\t\tmethod: 'post',\n\t\tdata: data\n\t})\n}\n\nOrdensDeServicoService.salvar = function (id, data) {\n\tnormalizePayload(data);\n\treturn fetch({\n\t\turl: `/ordens-de-servico/${id}`,\n\t\tmethod: 'put',\n\t\tdata: data\n\t})\n}\n\nexport default OrdensDeServicoService;\n","export const normalizePayload = (formData) => {\n  // remove null values from payload\n  Object.keys(formData).forEach(function(key) {\n    if (formData[key] === null || formData[key] === undefined || formData[key] === '') {\n        delete formData[key];\n    }\n  });\n};\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","\nexport const TRIAGEM = {\n\t\"id\": \"deddf150-e3a0-4a09-8b54-671df2ba6824\",\n\t\"description\": \"Triagem\"\n};\n\nexport const ABERTO = {\n\t\"id\": \"cbe8b932-90ca-4a5b-84e4-3aa91571a0cb\",\n\t\"description\": \"Aberto\"\n};\n\nexport const EM_ANDAMENTO = {\n\t\"id\": \"5c1795fd-8856-4c44-85fd-f1488cb5489b\",\n\t\"description\": \"Em Atendimento\"\n};\n\nexport const FECHADO = {\n\t\"id\": \"1cdf403c-9da1-4a8e-b2fc-3e356d9815ff\",\n\t\"description\": \"Fechado\"\n};\n\nexport const COBRANCA = {\n\t\"id\": \"4a48df79-a466-4bd0-83b9-3c94b2b76d7f\",\n\t\"description\": \"Cobrança\"\n};\n\nexport const ARQUIVADO = {\n\t\"id\": \"1050ced4-0599-456d-a614-932ab25aed99\",\n\t\"description\": \"Arquivado\"\n};\n\nexport const PERFIL_ADMINISTRADOR = {\n\t\"id\": \"administrador\",\n\t\"description\": \"Administrador\"\n};\nexport const PERFIL_TECNICO = {\n\t\"id\": \"tecnico\",\n\t\"description\": \"Tecnico\"\n};\nexport const PERFIL_CLIENTE = {\n\t\"id\": \"cliente\",\n\t\"description\": \"Cliente\"\n};\n\nexport const listaPerfil = [\n\tPERFIL_ADMINISTRADOR,\n\tPERFIL_TECNICO,\n\tPERFIL_CLIENTE\n];\n\nexport const listaStatusOrdemServico = [\n\tTRIAGEM,\n\tABERTO,\n\tEM_ANDAMENTO,\n\tFECHADO,\n\tCOBRANCA,\n\tARQUIVADO\t\n];\n\nexport const listaTipoOrdemServico = [\n\t{\n\t\t\"id\": \"f6d1944a-7569-4668-bae6-c6fe4f36eb29\",\n\t\t\"description\": \"Laboratório\"\n\t},\n\t{\n\t\t\"id\": \"9957342c-815e-47b4-8d16-62fe4432ee59\",\n\t\t\"description\": \"Campo\"\n\t}\n];\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Table, Tag, Pagination, Input, Select, DatePicker } from 'antd';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport OrdensDeServicoService from 'services/OrdensDeServiceService';\r\nimport utils from 'utils';\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { listaStatusOrdemServico, listaTipoOrdemServico } from '../dados';\r\n\r\nconst { Option } = Select;\r\n\r\nconst getServiceStatus = status => {\r\n\tif(status === 'Triagem') {\r\n\t\treturn 'red';\r\n\t}\r\n\tif(status === 'Aberto') {\r\n\t\treturn 'yellow';\r\n\t}\r\n  if(status === 'Em Atendimento') {\r\n\t\treturn 'blue';\r\n\t}\r\n  if(status === 'Cobrança') {\r\n\t\treturn 'purple';\r\n\t}\r\n  if(status === 'Fechado') {\r\n\t\treturn 'green';\r\n\t}\r\n\treturn '';\r\n}\r\n\r\nconst tableColumns = [\r\n\t{\r\n\t\ttitle: 'OS',\r\n\t\tdataIndex: 'numero',\r\n\t},\r\n  {\r\n\t\ttitle: 'Cliente',\r\n\t\tdataIndex: 'cliente'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Descricao',\r\n\t\tdataIndex: 'descricao',\r\n\t\trender: (_, record) => (\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: '30rem',\r\n\t\t\t\t\twhiteSpace: 'nowrap',\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\ttextOverflow: 'ellipsis',\r\n\t\t\t\t\tdisplay: 'block'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{ record.descricao }\r\n\t\t\t</span>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\ttitle: 'Data',\r\n\t\tdataIndex: 'data',\r\n\t\trender: (_, record) => (\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twhiteSpace: 'nowrap',\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\ttextOverflow: 'ellipsis',\r\n\t\t\t\t\tdisplay: 'block'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{ new Intl.DateTimeFormat(\"pt-BR\", {\r\n\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\tmonth: \"2-digit\",\r\n\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\thour: \"numeric\",\r\n\t\t\t\t\tminute: \"numeric\",\r\n\t\t\t\t}).format(new Date(record.data)) }\r\n\t\t\t</span>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\ttitle: 'Tecnico',\r\n\t\tdataIndex: 'nome'\r\n\t},\r\n  {\r\n\t\ttitle: 'Status',\r\n\t\tdataIndex: 'status',\r\n    render: (_, record) => (\r\n\t\t\t<><Tag color={getServiceStatus(record.status)}>{record.status}</Tag></>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'status')\r\n\t},\r\n  {\r\n\t\ttitle: 'Tipo',\r\n\t\tdataIndex: 'tipo'\r\n\t},\r\n\t\r\n];\r\n\r\n// Aberto, Em atendimento, Fechado, Arquivado\r\n\r\nexport const OrdenDeServico = () => {\r\n\tconst [ordensDeServico, setOrdensDeServico] = useState([]);\r\n\tconst [pagination, setPagination] = useState({\r\n\t\tpage: 1,\r\n\t\tlimit: 10,\r\n\t\ttotalPages: 1\r\n\t});\r\n\tconst [filtro, setFiltro] = useState({\r\n\t\tos: '',\r\n\t\ttipo: '',\r\n\t\tstatus: '',\r\n\t\tcliente: '',\r\n\t\tdata_inicio: '',\r\n\t\tdata_fim: '',\r\n\t\tdata_inicio_raw: '',\r\n\t\tdata_fim_raw: '',\r\n\t});\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst handleChangeFilterField = (field, event) => {\r\n\t\tconst value = event && event.target.value;\r\n\t\tlet updatedFilter = {\r\n\t\t\t...filtro,\r\n\t\t\t[field]: value\r\n\t\t};\r\n\r\n\t\tif (field === 'data_inicio_raw') {\r\n\t\t\tupdatedFilter = {\r\n\t\t\t\t...updatedFilter,\r\n\t\t\t'data_inicio': value && value.startOf('day').format().toString()\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (field === 'data_fim_raw') {\r\n\t\t\tupdatedFilter = {\r\n\t\t\t\t...updatedFilter,\r\n\t\t\t'data_fim': value && value.endOf('day').format().toString()\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsetFiltro(updatedFilter);\r\n\t}\r\n\r\n\tconst handleBuscarOrdensDeServico = async function(page=pagination.page, limit=pagination.limit) {\r\n\t\ttry {\r\n\t\t\tconst noNullFilters = Object.fromEntries(\r\n\t\t\t\tObject.entries(filtro).filter(([key, value]) => !key.includes('raw') && !!value)\r\n\t\t\t);\r\n\t\t\tconst resultado = await OrdensDeServicoService.fetch(page, limit, noNullFilters);\r\n\r\n\t\t\tconst rows = resultado.data.map(ordem => ({\r\n\t\t\t\tid: ordem.id,\r\n\t\t\t\tnumero: ordem.numero,\r\n\t\t\t\tcliente: ordem.nome_fantasia,\r\n\t\t\t\tdescricao: ordem.descricao,\r\n\t\t\t\tdata: ordem.created_at,\r\n\t\t\t\tnome: ordem.nome,\r\n\t\t\t\tstatus: ordem.status_ordem_servico,\r\n\t\t\t\ttipo: ordem.tipo_ordem_servico,\r\n\t\t\t}));\r\n\r\n\t\t\tsetOrdensDeServico(rows);\r\n\t\t\tsetPagination(resultado.pagination);\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tconsole.log('err >> ', err)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\thandleBuscarOrdensDeServico();\r\n\t}, []);\r\n\r\n\tconst onPageChange = (page, pageSize) => {\r\n\t\thandleBuscarOrdensDeServico(page, pageSize)\r\n\t}\r\n\r\n\tconst handeFiltrarOrdensDeServico = () => handleBuscarOrdensDeServico();\r\n\r\n  return (\r\n    <>\r\n      <Card title=\"Ordens de Servico\">\r\n\t\t\t\t{ /* Filtro */ }\r\n\t\t\t\t<Card >\r\n\t\t\t\t\t<div style={{ display: 'flex', flexDirection: 'column' }}>\r\n\t\t\t\t\t\t<Flex flexDirection=\"row\" style={{ display: 'flex', flexWrap: 'wrap', marginBottom: '1rem' }}>\r\n\t\t\t\t\t\t\t{ /* Numero da OS */ }\r\n\t\t\t\t\t\t\t<Flex flexDirection=\"column\">\r\n\t\t\t\t\t\t\t\t<label>OS</label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tvalue={filtro.nome}\r\n\t\t\t\t\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\t\t\t\t\tonChange={(ev) => handleChangeFilterField('os', ev)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '18rem', marginTop: '0.5rem', marginRight: '1rem' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t{ /* Tipo da OS */ }\r\n\t\t\t\t\t\t\t<Flex flexDirection=\"column\">\r\n\t\t\t\t\t\t\t\t<label>Tipo</label>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tvalue={filtro.tipo}\r\n\t\t\t\t\t\t\t\t\tonChange={(ev) => handleChangeFilterField('tipo', { target: { value: ev } })}\r\n\t\t\t\t\t\t\t\t\tshowSearch={true}\r\n\t\t\t\t\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '15rem', marginTop: '0.5rem', marginRight: '1rem' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tlistaTipoOrdemServico.map(tipoOrdem => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Option key={tipoOrdem.id} value={tipoOrdem.id}>{ tipoOrdem.description }</Option>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t{ /* Status da OS */ }\r\n\t\t\t\t\t\t\t<Flex flexDirection=\"column\">\r\n\t\t\t\t\t\t\t\t<label>Status</label>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tvalue={filtro.status}\r\n\t\t\t\t\t\t\t\t\tonChange={(ev) => handleChangeFilterField('status', { target: { value: ev } })}\r\n\t\t\t\t\t\t\t\t\tshowSearch={true}\r\n\t\t\t\t\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '15rem', marginTop: '0.5rem', marginRight: '1rem' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tlistaStatusOrdemServico.map(statusOrdem => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Option key={statusOrdem.id} value={statusOrdem.id}>{ statusOrdem.description }</Option>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t{ /* Cliente */ }\r\n\t\t\t\t\t\t\t<Flex flexDirection=\"column\">\r\n\t\t\t\t\t\t\t\t<label>Cliente</label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tvalue={filtro.cliente}\r\n\t\t\t\t\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\t\t\t\t\tonChange={(ev) => handleChangeFilterField('cliente', ev)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '18rem', marginTop: '0.5rem', marginRight: '1rem' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t{ /* Data Inicio */ }\r\n\t\t\t\t\t\t\t<Flex flexDirection=\"column\">\r\n\t\t\t\t\t\t\t\t<label>Data Inicio</label>\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tvalue={filtro.data_inicio_raw}\r\n\t\t\t\t\t\t\t\t\tonChange={(ev) => handleChangeFilterField('data_inicio_raw', { target: { value: ev } })}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '15rem', marginTop: '0.5rem', marginRight: '1rem' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t{ /* Data Fim */ }\r\n\t\t\t\t\t\t\t<Flex flexDirection=\"column\">\r\n\t\t\t\t\t\t\t\t<label>Data Fim</label>\r\n\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\tvalue={filtro.data_fim_raw}\r\n\t\t\t\t\t\t\t\t\tonChange={(ev) => handleChangeFilterField('data_fim_raw', { target: { value: ev } })}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '15rem', marginTop: '0.5rem', marginRight: '1rem' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Flex>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tstyle={{ minWidth: '10rem', alignSelf: 'flex-end' }}\r\n\t\t\t\t\t\t\tonClick={handeFiltrarOrdensDeServico}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tBuscar\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\r\n        <Link to={`/app/dashboards/abrir-chamado?previous=app/dashboards/ordens-de-servico`}>\r\n          <Button type=\"primary\">Abrir Chamado</Button>\r\n        </Link>\r\n\r\n        <Table\r\n          pagination={false}\r\n          columns={tableColumns} \r\n          dataSource={ordensDeServico} \r\n          rowKey='id'\r\n\t\t\t\t\tstyle={{ cursor: 'pointer', marginTop: '2rem' }}\r\n\t\t\t\t\tonRow={(record, rowIndex) => ({\r\n\t\t\t\t\t\tonClick: (event) => {\r\n\t\t\t\t\t\t\tnavigate(`/app/dashboards/editar-ordem-de-servico/${record.id}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n        />\r\n\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tdefaultCurrent={parseInt(pagination.page)}\r\n\t\t\t\t\tcurrent={parseInt(pagination.page)}\r\n\t\t\t\t\tpageSize={pagination.limit}\r\n\t\t\t\t\ttotal={pagination.total}\r\n\t\t\t\t\tstyle={{ marginTop: '2.5rem', marginBottom: '2.5rem' }}\r\n\t\t\t\t\tonChange={onPageChange}\r\n\t\t\t\t\tsize=\"default\" showSizeChanger showQuickJumper\r\n\t\t\t\t/>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrdenDeServico;\r\n"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","style","defaultProps","OrdensDeServicoService","page","limit","filtro","apiQuery","Object","entries","reduce","query","key","value","normalizedValue","encodeURIComponent","replace","fetch","id","data","normalizePayload","url","method","formData","keys","forEach","undefined","Utils","name","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","part","i","join","number","positive","negative","toLowerCase","list","filter","item","input","searchText","screens","breakpoints","push","TRIAGEM","ABERTO","EM_ANDAMENTO","FECHADO","PERFIL_ADMINISTRADOR","PERFIL_TECNICO","PERFIL_CLIENTE","listaPerfil","listaStatusOrdemServico","listaTipoOrdemServico","Option","Select","tableColumns","title","dataIndex","render","_","record","width","whiteSpace","overflow","textOverflow","display","descricao","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","status","sorter","utils","OrdenDeServico","useState","ordensDeServico","setOrdensDeServico","totalPages","pagination","setPagination","os","tipo","cliente","data_inicio","data_fim","data_inicio_raw","data_fim_raw","setFiltro","navigate","useNavigate","handleChangeFilterField","field","event","target","updatedFilter","startOf","endOf","handleBuscarOrdensDeServico","noNullFilters","fromEntries","includes","resultado","rows","map","ordem","numero","nome_fantasia","created_at","nome","status_ordem_servico","tipo_ordem_servico","console","log","useEffect","flexWrap","marginBottom","allowClear","onChange","ev","marginTop","marginRight","showSearch","optionFilterProp","tipoOrdem","description","statusOrdem","placeholder","type","minWidth","alignSelf","onClick","to","columns","dataSource","rowKey","cursor","onRow","rowIndex","defaultCurrent","current","pageSize","total","size","showSizeChanger","showQuickJumper"],"sourceRoot":""}