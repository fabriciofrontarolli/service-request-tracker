{"version":3,"file":"static/js/131.e1fdf9f1.chunk.js","mappings":"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","sources":["components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/shared-components/ColorPicker/index.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/HeaderNav.js","components/layout-components/NavSearch/index.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","layouts/AppLayout.js"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst translate = t(id, fallback)\r\n\r\n\treturn <>{translate}</>\r\n}\r\n\r\nexport default IntlMessage;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { \r\n  DashboardOutlined,\r\n  ToolOutlined,\r\n  LaptopOutlined,\r\n  UserOutlined,\r\n  UserAddOutlined,\r\n  FileAddOutlined,\r\n  FileSearchOutlined,\r\n  UserSwitchOutlined,\r\n  UsergroupAddOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport { PERFIL_ADMINISTRADOR, PERFIL_CLIENTE, PERFIL_TECNICO } from 'views/app-views/dashboards/dados';\r\n\r\n\r\nconst navOperacional = [{\r\n  key: 'operacional',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.operacional',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id, PERFIL_CLIENTE.id],\r\n  submenu: [\r\n    {\r\n      key: 'ordens-de-servico',\r\n      path: `${APP_PREFIX_PATH}/dashboards/ordens-de-servico`,\r\n      title: 'sidenav.operacional.ordensDeServico',\r\n      icon: FileSearchOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id, PERFIL_CLIENTE.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'abrir-chamado',\r\n      path: `${APP_PREFIX_PATH}/dashboards/abrir-chamado`,\r\n      title: 'sidenav.operacional.abrirChamado',\r\n      icon: FileAddOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id, PERFIL_CLIENTE.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'dashboards-customers',\r\n      path: `${APP_PREFIX_PATH}/dashboards/clientes`,\r\n      title: 'sidenav.operacional.clientes',\r\n      icon: UserOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'dashboards-customer',\r\n      path: `${APP_PREFIX_PATH}/dashboards/novo-cliente`,\r\n      title: 'sidenav.operacional.novoCliente',\r\n      icon: UserAddOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst navQuadros = [{\r\n  key: 'quadros',\r\n  path: `${APP_PREFIX_PATH}/quadros`,\r\n  title: 'sidenav.quadros',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id],\r\n  submenu: [\r\n    {\r\n      key: 'laboratorio',\r\n      path: `${APP_PREFIX_PATH}/quadros/laboratorio`,\r\n      title: 'sidenav.quadros.laboratorio',\r\n      icon: LaptopOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'campo',\r\n      path: `${APP_PREFIX_PATH}/quadros/campo`,\r\n      title: 'sidenav.quadros.campo',\r\n      icon: ToolOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id, PERFIL_TECNICO.id],\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst navUsuarios = [{\r\n  key: 'usuarios',\r\n  path: `${APP_PREFIX_PATH}/usuarios`,\r\n  title: 'sidenav.usuarios',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  profiles: [PERFIL_ADMINISTRADOR.id],\r\n  submenu: [\r\n    {\r\n      key: 'usuarios',\r\n      path: `${APP_PREFIX_PATH}/administrativo/usuarios`,\r\n      title: 'sidenav.usuarios.listagem',\r\n      icon: UserSwitchOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'novo',\r\n      path: `${APP_PREFIX_PATH}/administrativo/novo-usuario`,\r\n      title: 'sidenav.usuarios.novo',\r\n      icon: UsergroupAddOutlined,\r\n      breadcrumb: false,\r\n      profiles: [PERFIL_ADMINISTRADOR.id],\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...navOperacional,\r\n  ...navQuadros,\r\n  ...navUsuarios,\r\n]\r\n\r\nexport default navigationConfig;\r\n","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport { AUTH_USER } from 'constants/AuthConstant';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n\tisLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n\tlet keyList = [];\r\n\tlet keyString = \"\";\r\n\tif (key) {\r\n\t\tconst arr = key.split(\"-\");\r\n\t\tfor (let index = 0; index < arr.length; index++) {\r\n\t\t\tconst elm = arr[index];\r\n\t\t\tindex === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n\t\t\tkeyList.push(keyString);\r\n\t\t}\r\n\t}\r\n\treturn keyList;\r\n};\r\n\r\nconst MenuItem = ({title, icon, path}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tdispatch(onMobileNavToggle(false))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{icon && <Icon type={icon} style={{ fontSize: '40px', color: 'red' }} /> }\r\n\t\t\t<span>{setLocale(title)}</span>\r\n\t\t\t{path && <Link onClick={closeMobileNav} to={path} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst getSideNavMenuItem = (navItem, perfil) => navItem.map(nav => {\r\n\tconst isAllowed = nav.profiles.find(p => p.toLowerCase() === perfil);\r\n\tif (!isAllowed) {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : {path: nav.path, icon: nav.icon})} />,\r\n\t\t...(nav.isGroupTitle ? {type: 'group'} : {}),\r\n\t\t...(nav.submenu.length > 0 ? {children: getSideNavMenuItem(nav.submenu, perfil)} : {})\r\n\t}\r\n})\r\n\r\nconst getTopNavMenuItem = (navItem, perfil) => navItem.map(nav => {\r\n\tconst isAllowed = nav.profiles.find(p => p.toLowerCase() === perfil);\r\n\tif (!isAllowed) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : {path: nav.path})} />,\r\n\t\t...(nav.submenu.length > 0 ? {children: getTopNavMenuItem(nav.submenu, perfil)} : {})\r\n\t}\r\n})\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { routeInfo, hideGroupTitle } = props;\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\r\n\tconst getLoggedInUser = () => {\r\n\t\tconst loggedInUserRaw = localStorage.getItem(AUTH_USER) || null;\r\n\t\tconst loggedInUser = JSON.parse(loggedInUserRaw);\r\n\t\treturn loggedInUser;\r\n\t}\r\n\r\n\tconst loggedInUser = getLoggedInUser();\r\n\tconst userProfile = loggedInUser ? loggedInUser.perfil : '';\r\n\r\n\tconst menuItems = useMemo(() => getSideNavMenuItem(navigationConfig, userProfile), []);\r\n\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tmode=\"inline\"\r\n\t\t\ttheme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n\t\t\tstyle={{ height: \"100%\", borderRight: 0, fontSize: '16px' }}\r\n\t\t\tdefaultSelectedKeys={[routeInfo?.key]}\r\n\t\t\tdefaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n\t\t\tclassName={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst TopNavContent = () => {\r\n\tconst topNavColor = useSelector(state => state.theme.topNavColor);\r\n\r\n\tconst getLoggedInUser = () => {\r\n\t\tconst loggedInUserRaw = localStorage.getItem(AUTH_USER) || null;\r\n\t\tconst loggedInUser = JSON.parse(loggedInUserRaw);\r\n\t\treturn loggedInUser;\r\n\t}\r\n\r\n\tconst loggedInUser = getLoggedInUser();\r\n\tconst userProfile = loggedInUser ? loggedInUser.perfil : '';\r\n\r\n\tconst menuItems = useMemo(() => getTopNavMenuItem(navigationConfig, userProfile), []);\r\n\r\n\treturn (\r\n\t\t<Menu \r\n\t\t\tmode=\"horizontal\" \r\n\t\t\tstyle={{ backgroundColor: topNavColor }}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n\treturn props.type === NAV_TYPE_SIDE ? (\r\n\t\t<SideNavContent {...props} />\r\n\t) : (\r\n\t\t<TopNavContent {...props} />\r\n\t);\r\n};\r\n\r\nexport default MenuContent;\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor,}) => {\r\n\tconst props = { topNavColor }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { useSelector } from 'react-redux';\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n\tconst navType = useSelector(state => state.theme.navType);\r\n\r\n\tconst getLogoWidthGutter = () => {\r\n\t\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tif(isNavTop) {\r\n\t\t\treturn 'auto'\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst getLogo = () => {\r\n\t\tif(logoType === 'light') {\r\n\t\t\tif(navCollapsed) {\r\n\t\t\treturn '/img/sathi-logo.png'\r\n\t\t\t}\r\n\t\t\treturn '/img/sathi-logo.png'\r\n\t\t}\r\n\t\r\n\t\tif (navCollapsed) {\r\n\t\t\treturn '/img/sathi-logo.png'\r\n\t\t}\r\n\t\treturn '/img/sathi-logo.png'\r\n\t}\r\n\t\r\n\tconst getLogoDisplay = () => {\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 'd-none'\r\n\t\t} else {\r\n\t\t\treturn 'logo'\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={getLogoDisplay()} \r\n\t\t\tstyle={{width: `${getLogoWidthGutter()}`}}>\r\n\t\t\t<img src={getLogo()} alt={`${APP_NAME} logo`} style={{ width: 'inherit' }} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n\trouteInfo,\r\n\thideGroupTitle\r\n}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n\tconst menuContentprops = { sideNavTheme, routeInfo, hideGroupTitle };\r\n\r\n\tconst onClose = () => {\r\n\t\tdispatch(onMobileNavToggle(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onClose}\r\n\t\t\topen={mobileNav}\r\n\t\t\tbodyStyle={{ padding: 5 }}\r\n\t\t>\r\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\r\n\t\t\t\t<Flex justifyContent=\"between\" alignItems=\"center\">\r\n\t\t\t\t\t<Logo mobileLogo={true} />\r\n\t\t\t\t\t<div className=\"nav-close\" onClick={() => onClose()}>\r\n\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"mobile-nav-menu\">\r\n\t\t\t\t\t<Scrollbars autoHide>\r\n\t\t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default MobileNav;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Menu, Dropdown, Avatar, Divider } from 'antd';\r\nimport { useDispatch } from 'react-redux'\r\nimport { \r\n\tEditOutlined,\r\n\tLogoutOutlined ,\r\n\tUserOutlined\r\n} from '@ant-design/icons';\r\nimport Icon from 'components/util-components/Icon';\r\nimport { signOut } from 'store/slices/authSlice';\r\nimport { AUTH_USER } from 'constants/AuthConstant';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nconst MenuItem = (props) => (\r\n\t<a className=\"d-flex align-items-center\" href={props.path}>\r\n\t\t<Icon className=\"font-size-md\" type={props.icon} />\r\n\t\t<span className=\"font-weight-normal mx-2\">{props.label}</span>\r\n\t</a>\r\n)\r\n\r\nconst MenuItemSignOut = (props) => (\r\n\t<span className=\"d-flex align-items-center\">\r\n\t\t<LogoutOutlined className=\"font-size-md\" />\r\n\t\t<span className=\"font-weight-normal mx-2\">{props.label}</span>\r\n\t</span>\r\n)\r\n\r\nexport const NavProfile = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [userName, setUserName] = useState();\r\n\r\n\tconst handleClick = ({ key }) => {\r\n\t\tif (key === 'Sign Out') {\r\n\t\t\thandleSignOut()\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSignOut = () => {\r\n\t\tdispatch(signOut())\r\n\t}\r\n\r\n\tconst menu = (\r\n\t\t<Menu\r\n\t\t\tonClick={handleClick}\r\n\t\t\titems={\r\n\t\t\t\t[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Edit Profile',\r\n\t\t\t\t\t\tlabel: <MenuItem path={`${APP_PREFIX_PATH}/perfil`} label=\"Meu Perfil\" icon={EditOutlined} />,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Sign Out',\r\n\t\t\t\t\t\tlabel: <MenuItemSignOut label=\"Sair\" />,\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t/>\r\n\t)\r\n\r\n\tconst getLoggedInUser = () => {\r\n\t\tconst loggedInUserRaw = localStorage.getItem(AUTH_USER) || null;\r\n\t\tif (!!loggedInUserRaw) {\r\n\t\t\tconst loggedInUser = JSON.parse(loggedInUserRaw);\r\n\t\t\tsetUserName(loggedInUser && loggedInUser.nome);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetLoggedInUser();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={menu} trigger={[\"click\"]}>\r\n\t\t\t<div className=\"nav-item\">\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<div className=\"pl-2 d-none d-sm-block profile-text\">\r\n\t\t\t\t\t\t<div className=\"font-size-base font-weight-bold\">\r\n\t\t\t\t\t\t\t{ userName }\r\n\t\t\t\t\t\t\t<UserOutlined className=\"nav-icon ml-2 mr-2\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t);\r\n}\r\n\r\nexport default NavProfile\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from 'assets/data/language.data.json';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { onLocaleChange } from 'store/slices/themeSlice';\r\nimport i18n from 'i18next'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = () => {\r\n\r\n\tconst locale = useSelector(state => state.theme.locale)\r\n\r\n\tconst language = getLanguageDetail(locale);\r\n\tconst {langName, icon} = language;\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nconst MenuItem = (props) => {\r\n\tconst locale = useSelector(state => state.theme.locale);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleLocaleChange = (langId) => {\r\n\t\tdispatch(onLocaleChange(langId))\r\n\t\ti18n.changeLanguage(langId)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<span className=\"d-flex justify-content-between align-items-center\" onClick={() => handleLocaleChange(props.langId)}>\r\n\t\t\t<div>\r\n\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${props.icon}.png`} alt={props.langName}/>\r\n\t\t\t\t<span className=\"font-weight-normal ml-2\">{props.langName}</span>\r\n\t\t\t</div>\r\n\t\t\t{locale === props.langId ? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t</span>\r\n\t)\r\n}\r\n\r\nconst menu = (\r\n\t<Menu \r\n\t\titems={\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'En',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"us\" langName=\"English\" langId=\"en\" />\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Ch',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"cn\" langName=\"Chinese\" langId=\"zh\" />\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Fr',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"fr\" langName=\"French\" langId=\"fr\" />\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Jp',\r\n\t\t\t\t\tlabel: <MenuItem icon=\"jp\" langName=\"Janpanese\" langId=\"ja\" />\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t/>\r\n)\r\n\r\nexport const NavLanguage = ({ configDisplay }) => {\r\n\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={menu} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"nav-item\">\r\n\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nexport default NavLanguage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'store/slices/themeSlice';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = () => {\r\n\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { \r\n\t\tnavType, \r\n\t\tsideNavTheme, \r\n\t\tnavCollapsed, \r\n\t\ttopNavColor, \r\n\t\theaderNavColor, \r\n\t\tlocale, \r\n\t\tcurrentTheme, \r\n\t\tdirection \r\n\t} = useSelector(state => state.theme)\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP\r\n\tconst isCollapse = navCollapsed \r\n\r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tdispatch(onSwitchTheme(changedTheme))\r\n\t\tswitcher({ theme: themes[changedTheme] });\r\n\t};\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tdispatch(onHeaderNavColorChange(''))\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tdispatch(onTopNavColorChange(hex))\r\n\t}\r\n\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tdispatch(onHeaderNavColorChange(hex))\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tdispatch(onHeaderNavColorChange(''))\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tdispatch(onNavTypeChange(value))\r\n\t}\r\n\r\n\tconst haddleNavStyleChange = (style) => {\r\n\t\tdispatch(onNavStyleChange(style))\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\tconst handleToggleCollapseNav = () => {\r\n\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t}\r\n\r\n\tconst handleDirectionChange = (dir) => {\r\n\t\tdispatch(onDirectionChange(dir))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navegação</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Cor Barra de Navegação:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Tipo de Navegação:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Lateral</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Topo</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Cor Navegação Lateral:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => haddleNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Colapsar Navegação Lateral:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={handleToggleCollapseNav} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Tema Escuro:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Direção:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => handleDirectionChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={direction}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_LTR}>Esquerda</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_RTL}>Direita</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ThemeConfigurator\r\n","import React, { useState } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport const NavPanel = ({ direction }) => {\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n  \tconst showDrawer = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n  \tconst onClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"nav-item\" onClick={showDrawer}>\r\n\t\t\t\t<SettingOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t</div>\r\n\t\t\t<Drawer\r\n\t\t\t\ttitle=\"Configuração de Tema\"\r\n\t\t\t\tplacement={direction === DIR_RTL ? 'left' : 'right'} \r\n\t\t\t\twidth={350}\r\n\t\t\t\tonClose={onClose}\r\n\t\t\t\topen={open}\r\n\t\t\t>\r\n\t\t\t\t<ThemeConfigurator/>\r\n\t\t\t</Drawer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NavPanel;","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tpopupClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\nimport NavLanguage from './NavLanguage';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport SearchInput from './NavSearch/SearchInput.js'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n\r\n\tconst { isMobile } = props;\r\n\r\n\tconst [searchActive, setSearchActive] = useState(false);\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed)\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav)\r\n\tconst navType = useSelector(state => state.theme.navType)\r\n\tconst headerNavColor = useSelector(state => state.theme.headerNavColor)\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\tconst direction = useSelector(state => state.theme.direction)\r\n\r\n\tconst onSearchActive = () => {\r\n\t\tsetSearchActive(true)\r\n\t}\r\n\r\n\tconst onSearchClose = () => {\r\n\t\tsetSearchActive(false)\r\n\t}\r\n\r\n\tconst onToggle = () => {\r\n\t\tif(!isMobile) {\r\n\t\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t\t} else {\r\n\t\t\tdispatch(onMobileNavToggle(!mobileNav))\r\n\t\t}\r\n\t}\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\r\n\tconst mode = ()=> {\r\n\t\tif(!headerNavColor) {\r\n\t\t\treturn utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n\t\t}\r\n\t\treturn utils.getColorContrast(headerNavColor);\r\n\t}\r\n\r\n\tconst navMode = mode();\r\n\r\n\tconst getNavWidth = () => {\r\n\t\tif(isNavTop || isMobile) {\r\n\t\t\treturn '0px';\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`;\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!isMobile) {\r\n\t\t\tonSearchClose();\r\n\t\t}\r\n\t})\r\n\t\r\n\treturn (\r\n\t\t<Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n\t\t\t\t<Logo logoType={navMode} />\r\n\t\t\t\t<div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n\t\t\t\t\t<div className=\"nav-left\">\r\n\t\t\t\t\t\t<div className=\"nav-item\" onClick={onToggle}>\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t{navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"nav-right\">\r\n\t\t\t\t\t\t<NavProfile />\r\n\t\t\t\t\t\t<NavPanel direction={direction} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Header>\r\n\t)\r\n}\r\n\r\nexport default HeaderNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = props => {\r\n\tconst location = useLocation();\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn (\r\n\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t<Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t</Breadcrumb.Item>\r\n\t\t);\r\n\t});\r\n  \r\n\treturn (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n\t);\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport { Layout, Grid,} from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { \r\n    SIDE_NAV_WIDTH, \r\n    SIDE_NAV_COLLAPSED_WIDTH,\r\n    NAV_TYPE_SIDE,\r\n    NAV_TYPE_TOP,\r\n    DIR_RTL,\r\n    DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\n\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n    const screens = utils.getBreakPoint(useBreakpoint());\r\n    const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n    const isNavSide = navType === NAV_TYPE_SIDE\r\n    const isNavTop = navType === NAV_TYPE_TOP\r\n    const getLayoutGutter = () => {\r\n        if(isNavTop || isMobile) {\r\n            return 0\r\n        }\r\n        return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n    }\r\n\r\n    const { status } = useThemeSwitcher();\r\n\r\n    if (status === 'loading') {\r\n        return <Loading cover=\"page\" />;\r\n    }\r\n\r\n    const getLayoutDirectionGutter = () => {\r\n        if(direction === DIR_LTR) {\r\n            return {paddingLeft: getLayoutGutter()}\r\n        }  \r\n        if(direction === DIR_RTL) {\r\n            return {paddingRight: getLayoutGutter()}\r\n        }\r\n        return {paddingLeft: getLayoutGutter()}\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <HeaderNav isMobile={isMobile}/>\r\n            {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n            <Layout className=\"app-container\">\r\n                {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n                <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n                    <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n                        <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n                        <Content>\r\n                            <Suspense fallback={<Loading cover=\"content\"/>}>\r\n                                {children}\r\n                            </Suspense>\r\n                        </Content>\r\n                    </div>\r\n                </Layout>\r\n            </Layout>\r\n            {isMobile && <MobileNav />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { navCollapsed, navType, locale } =  theme;\r\n    return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));"],"names":["id","fallback","translate","t","useTranslation","Icon","this","props","type","className","React","Component","navOperacional","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","isGroupTitle","profiles","PERFIL_ADMINISTRADOR","PERFIL_TECNICO","PERFIL_CLIENTE","submenu","FileSearchOutlined","FileAddOutlined","UserOutlined","UserAddOutlined","navQuadros","LaptopOutlined","ToolOutlined","navUsuarios","UserSwitchOutlined","UsergroupAddOutlined","useBreakpoint","Grid","setLocale","localeKey","isLocaleOn","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","MenuItem","dispatch","useDispatch","isMobile","utils","includes","style","fontSize","color","onClick","onMobileNavToggle","to","getSideNavMenuItem","navItem","perfil","map","nav","find","p","toLowerCase","label","children","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","useSelector","state","theme","loggedInUser","loggedInUserRaw","localStorage","getItem","AUTH_USER","JSON","parse","getLoggedInUser","userProfile","menuItems","useMemo","navigationConfig","mode","SIDE_NAV_LIGHT","height","borderRight","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","SIDE_NAV_DARK","width","SIDE_NAV_WIDTH","collapsed","autoHide","NAV_TYPE_TOP","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","src","alt","APP_NAME","mobileNav","menuContentprops","onClose","placement","closable","open","bodyStyle","padding","flexDirection","justifyContent","alignItems","ArrowLeftOutlined","href","MenuItemSignOut","LogoutOutlined","useState","userName","setUserName","handleSignOut","signOut","menu","EditOutlined","useEffect","nome","overlay","trigger","locale","langId","onLocaleChange","i18n","maxWidth","langName","CheckOutlined","colorChange","visible","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","onPickerDropdown","onChange","value","rgb","rgba","r","g","b","a","colorOptions","ListOption","name","selector","disabled","vertical","headerNavColor","currentTheme","direction","isCollapse","useThemeSwitcher","switcher","themes","onHeaderNavColorChange","hex","onTopNavColorChange","size","e","target","toggleCollapsedNav","onNavTypeChange","onNavStyleChange","checked","isChecked","changedTheme","onSwitchTheme","dir","onDirectionChange","DIR_LTR","DIR_RTL","setOpen","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","popupClassName","onSelect","onSearch","searchText","item","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","Header","CloseOutlined","setSearchActive","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","i","assignBreadcrumb","obj","forEach","BreadcrumbRoute","pathSnippets","useLocation","pathname","filter","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","display","Content","AppLayout","location","currentRouteInfo","screens","isNavSide","getLayoutGutter","status","Loading","cover","paddingLeft","paddingRight","Suspense"],"sourceRoot":""}