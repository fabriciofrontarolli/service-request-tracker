server {
  # server_name codebuilders.com.br www.codebuilders.com.br;
  listen       80;
  listen  [::]:80;
  server_name  localhost;
  ssl_certificate /usr/share/nginx/sathi-certificates/sathi.crt;
  ssl_certificate_key /usr/share/nginx/sathi-certificates/sathi.key;
  listen 443 ssl;

  # nginx default www folder: /usr/share/nginx/html

  location /api/ {
    rewrite ^/api/(.*) /$1 break;
    proxy_pass http://api:8090; #whatever port your app runs on
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cache_bypass $http_upgrade;
  }

  location /.*/static/ {
    rewrite ^/.*?/static/(.*)$ /static/$1 break;
    root /var/www/html;
    add_header Cache-Control "public, max-age=31536000, immutable";
  }

  location / {
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
    # rewrite ^/[^/]+/static/(.*)$ /static/$1 break;
    try_files $uri /index.html;
  }
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}


# server {
#   if ($host = www.codebuilders.com.br) {
#       return 301 https://$host$request_uri;
#   } # managed by Certbot
# 
# 
#   if ($host = codebuilders.com.br) {
#       return 301 https://$host$request_uri;
#   } # managed by Certbot
# 
# 
#   listen 80;
#   listen [::]:80 default_server;
#   server_name codebuilders.com.br www.codebuilders.com.br;
#   return 404; # managed by Certbot
# }
